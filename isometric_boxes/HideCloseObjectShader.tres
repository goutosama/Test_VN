[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;

render_mode cull_disabled;

uniform sampler2D mainTex : hint_albedo;
uniform float depth_threshold : hint_range(0.0, 20.0);

float dither(vec2 position, float brightness) {
    int x = int(mod(position.x, 4.0));
    int y = int(mod(position.y, 4.0));
    int index = x + y * 4;
    float dithering[16] = float[](
        0.0, 0.5, 0.125, 0.625,
        0.75, 0.25, 0.875, 0.375,
        0.1875, 0.6875, 0.0625, 0.5625,
        0.9375, 0.4375, 1.0, 0.8125
    );
    float threshold = dithering[index];
    return brightness < threshold ? 0.0 : 1.0;
}

void fragment(){
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;
	
	ALBEDO = texture(mainTex, UV.xy).rgb;
	
	if (linear_depth <= depth_threshold){
		//discard;
		//ALBEDO = vec3(0.0,1.0,0.0);
		ALPHA = dither(FRAGCOORD.xy, linear_depth / 10.0);
	}
	
	//ALBEDO = COLOR.rgb;
}"
