[gd_scene load_steps=12 format=2]

[ext_resource path="res://shaders/crt_material.tres" type="Material" id=1]
[ext_resource path="res://danmaku/ui/DanmakuUI.tscn" type="PackedScene" id=2]
[ext_resource path="res://Images/bg30a0.jpg" type="Texture" id=3]
[ext_resource path="res://danmaku/bullets/Bullet.tscn" type="PackedScene" id=4]
[ext_resource path="res://danmaku/player/Player.tscn" type="PackedScene" id=5]
[ext_resource path="res://danmaku/LevelPlayer.gd" type="Script" id=6]

[sub_resource type="Animation" id=1]
resource_name = "CRT Off"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/aberration_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.1, 0.19 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/boost")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.704355, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../..:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -0.504, 0 ), Vector2( 0, 370 ), Vector2( 512, 384 ), Vector2( 512, 384 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../..:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 0.05 ), Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../../WhiteFadeIn:color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "CRT On"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/aberration_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.19, 0.1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/boost")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.704355, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../..:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 512, 384 ), Vector2( 512, 384 ), Vector2( 0, 370 ), Vector2( -0.504, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../..:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 1, 0.05 ), Vector2( 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../../WhiteFadeIn:color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "CRT television"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/aberration_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.1, 0.19 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/boost")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.704355, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17, 1.2, 1.17 ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/aberration_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/boost")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.2 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../..:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "Новая анимация"
length = 120.0
tracks/0/type = "method"
tracks/0/path = NodePath("LevelPlayer")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"values": [  ]
}

[node name="Danmaku Gameplay Node" type="Node2D"]
self_modulate = Color( 0.203922, 0.0745098, 0.0745098, 1 )
position = Vector2( -0.504, 0 )

[node name="TextureRect2" type="TextureRect" parent="."]
margin_right = 1024.0
margin_bottom = 768.0
texture = ExtResource( 3 )
stretch_mode = 1

[node name="Battle UI" parent="." instance=ExtResource( 2 )]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_top = 768.0
margin_bottom = 768.0

[node name="CRT Effect" type="CanvasLayer" parent="."]
layer = 20

[node name="ColorRect" type="ColorRect" parent="CRT Effect"]
material = ExtResource( 1 )
margin_right = 1024.0
margin_bottom = 768.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="CRT Effect"]
root_node = NodePath("../ColorRect")
"anims/CRT Off" = SubResource( 1 )
"anims/CRT On" = SubResource( 5 )
"anims/CRT television" = SubResource( 2 )
anims/RESET = SubResource( 3 )

[node name="WhiteFadeIn" type="ColorRect" parent="."]
margin_right = 1024.0
margin_bottom = 768.0
color = Color( 1, 1, 1, 0 )

[node name="TV Black background" type="CanvasLayer" parent="."]
layer = -2

[node name="ColorRect" type="ColorRect" parent="TV Black background"]
margin_right = 1024.0
margin_bottom = 768.0
color = Color( 0, 0, 0, 1 )

[node name="Bullet Node" parent="." instance=ExtResource( 4 )]

[node name="Player" parent="." instance=ExtResource( 5 )]
position = Vector2( 517.504, 622 )
collision_layer = 9
collision_mask = 17
game_field = [ 1008, 752, 16, 16 ]

[node name="LevelPlayer" type="AnimationPlayer" parent="."]
"anims/Новая анимация" = SubResource( 6 )
script = ExtResource( 6 )

[connection signal="body_shape_entered" from="Player" to="Player" method="_on_Player_body_shape_entered"]
[connection signal="body_shape_exited" from="Player" to="Player" method="_on_Player_body_shape_exited"]
